#!/bin/bash

# Load environment variables
source .env

# Get the current date in YYYY-MM-DD format
CURRENT_DATE=$(date +'%Y-%m-%d')

# AWS Lambda function name
#LAMBDA_FUNCTION_NAME="$FUNCTION_NAME"

# AWS API Gateway name
#API_GATEWAY_NAME="$API_GATEWAY_NAME"

# AWS DynamoDB table name
#DYNAMODB_TABLE_NAME="$TABLE_NAME"

# Deploy Lambda function
#aws lambda create-function \
#    --function-name "$FUNCTION_NAME" \
#    --runtime python3.11 \
#    --handler lambda.lambda_handler \
#    --role arn:aws:iam::'$AWS_ACCOUNT_ID'/my-lambda-role \
#    --code S3Bucket=my-lambda-bucket-01,S3Key=lambda-essentials.zip

# Create DynamoDB table
#aws dynamodb create-table \
#    --table-name "$TABLE_NAME" \
#    --attribute-definitions AttributeName="$PARTITION_KEY",AttributeType=S \
#    --key-schema AttributeName="$PARTITION_KEY",KeyType=HASH \
#    --provisioned-throughput ReadCapacityUnits=5,WriteCapacityUnits=5


# Create a Gateway REST API
#api_id=$(aws apigateway create-rest-api --name $API_GATEWAY_NAME --query 'id' --output text)


# Get the root resource ID
#root_resource_id=$(aws apigateway get-resources --rest-api-id $api_id --query 'items[0].id' --output text)

# Creating a resource under the root resource
#resource_id=$(aws apigateway create-resource --rest-api-id $api_id --parent-id $root_resource_id --path-part {proxy+} --query 'id' --output text)

# Creating a POST method for the resource
#aws apigateway put-method --rest-api-id $api_id --resource-id $resource_id --http-method POST --authorization-type NONE

# Create Method Response
#aws apigateway put-method-response --rest-api-id $api_id --resource-id $resource_id --http-method POST --status-code 200 --response-models "{\"application/json\": \"Empty\"}"

# Integrate the Lambda function with POST method
#aws apigateway put-integration --rest-api-id $api_id --resource-id $resource_id --http-method POST --type AWS_PROXY \
#    --integration-http-method POST --uri arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-2:"$AWS_ACCOUNT_ID":function:"$FUNCTION_NAME"/invocations

# Deploy the API
#deployment_id=$(aws apigateway create-deployment --rest-api-id $api_id --stage-name prod --query 'id' --output text)

# Testing Invoke Method
#aws apigateway test-invoke-method --rest-api-id $api_id --resource-id $resource_id --http-method POST --path-with-query-string "" --body "{}"
